Token := 'a' | 'bc' | R'\d+';
/*
# add three 'pattern' to token table.
token_table = ( ...
               (unique_literal_cache_pool["Token"], char_matcher('a')),
               (unique_literal_cache_pool["Token"], str_matcher('bc')),
               (unique_literal_cache_pool["Token"], regex_matcher(('\d+')))
               ...)

# because regex_matcher does not generate tokens who can be compared with `is`, so we create 
# a literal parser to match tokens by their names.

token_table = LiteralNameParser('Token')

*/

Parser2 ::= Token Parser1+ 'keyword' Parser3;

/*
# add a  `pattern` to token table
token_table = ( ...
               (unique_literal_cache_pool["Token"], regex_matcher(('\d+')))
               ...)

*/