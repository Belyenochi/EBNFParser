# This file is automatically generated by EBNFParser.
from Ruikowa.ObjectRegex.Tokenizer import unique_literal_cache_pool, regex_matcher, char_matcher, str_matcher, Tokenizer
from Ruikowa.ObjectRegex.Node import AstParser, Ref, SeqParser, LiteralValueParser as L, LiteralNameParser, Undef
namespace = globals()
recur_searcher = set()
token_table = ((unique_literal_cache_pool["url"], regex_matcher('https.*?\.(com|cn|org|net)')),
               (unique_literal_cache_pool["other"], regex_matcher('.')),)

class UNameEnum:
# names

    url = unique_literal_cache_pool['url']
    other = unique_literal_cache_pool['other']
    parserToTest = unique_literal_cache_pool['parserToTest']
        
cast_map = {}
token_func = lambda _: Tokenizer.from_raw_strings(_, token_table, ({}, {}),cast_map=cast_map)
url = LiteralNameParser('url')
other = LiteralNameParser('other')
parserToTest = AstParser([SeqParser([Ref('url')], [Ref('other')], at_least=1,at_most=Undef)],
                         name="parserToTest",
                         to_ignore=({"other"}, {}))
parserToTest.compile(namespace, recur_searcher)