statements[
    I[
        STR[
]
    ]
    statement[
        declaration[
            variableDeclaration[
                STR[var]
                variableDeclarationEntry[
                    Identifier[
                        STR[f]
                    ]
                    STR[:]
                    Type[
                        Identifier[
                            STR[auto]
                        ]
                    ]
                ]
                STR[=]
                expression[
                    LambdaDef[
                        STR[(]
                        variableDeclarationEntryList[
                            variableDeclarationEntry[
                                Identifier[
                                    STR[i]
                                ]
                                STR[:]
                                Type[
                                    Identifier[
                                        STR[i32]
                                    ]
                                ]
                            ]
                            STR[,]
                            variableDeclarationEntry[
                                Identifier[
                                    STR[inner]
                                ]
                                STR[:]
                                Type[
                                    STR[[]
                                    TypeList[
                                        Type[
                                            Identifier[
                                                STR[i32]
                                            ]
                                        ]
                                    ]
                                    STR[=>]
                                    Type[
                                        Identifier[
                                            STR[i32]
                                        ]
                                    ]
                                    STR[]]
                                ]
                            ]
                        ]
                        STR[)]
                        STR[->]
                        body[
                            block[
                                STR[{]
                                statements[
                                    statement[
                                        expression[
                                            BinaryOperation[
                                                UnaryOperation[
                                                    AtomExpr[
                                                        Atom[
                                                            Identifier[
                                                                STR[inner]
                                                            ]
                                                        ]
                                                        Trailer[
                                                            Call[
                                                                STR[(]
                                                                expressionList[
                                                                    expression[
                                                                        BinaryOperation[
                                                                            UnaryOperation[
                                                                                AtomExpr[
                                                                                    Atom[
                                                                                        Identifier[
                                                                                            STR[i]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                STR[)]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                STR[}]
                            ]
                        ]
                    ]
                ]
            ]
        ]
        STR[;]
    ]
    I[
        STR[
]
    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            Identifier[
                                STR[f]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            STR[2]
                        ]
                    ]
                ]
                STR[+]
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            STR[1]
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            LambdaDef[
                variableDeclarationEntry[
                    Identifier[
                        STR[i]
                    ]
                    STR[:]
                    Type[
                        Identifier[
                            STR[auto]
                        ]
                    ]
                ]
                STR[->]
                body[
                    statement[
                        expression[
                            BinaryOperation[
                                UnaryOperation[
                                    AtomExpr[
                                        Atom[
                                            STR[1]
                                        ]
                                    ]
                                ]
                                STR[+]
                                UnaryOperation[
                                    AtomExpr[
                                        Atom[
                                            STR[2]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    I[
        STR[
]
    ]
    statement[
        declaration[
            variableDeclaration[
                STR[let]
                variableDeclarationEntry[
                    Identifier[
                        STR[f2]
                    ]
                    STR[:]
                    Type[
                        STR[[]
                        TypeList[
                            Type[
                                STR[[]
                                TypeList[
                                    Type[
                                        Identifier[
                                            STR[i32]
                                        ]
                                    ]
                                ]
                                STR[=>]
                                Type[
                                    Identifier[
                                        STR[i32]
                                    ]
                                ]
                                STR[]]
                            ]
                        ]
                        STR[=>]
                        Type[
                            Identifier[
                                STR[i32]
                            ]
                        ]
                        STR[]]
                    ]
                ]
                STR[=]
                expression[
                    LambdaDef[
                        block[
                            STR[{]
                            variableDeclarationEntryList[
                                I[
                                    STR[
]
                                ]
                                variableDeclarationEntry[
                                    Identifier[
                                        STR[g]
                                    ]
                                    STR[:]
                                    Type[
                                        Identifier[
                                            STR[auto]
                                        ]
                                    ]
                                ]
                            ]
                            STR[->]
                            statements[
                                I[
                                    STR[
]
                                ]
                                statement[
                                    expression[
                                        BinaryOperation[
                                            UnaryOperation[
                                                AtomExpr[
                                                    Atom[
                                                        STR[2]
                                                    ]
                                                ]
                                            ]
                                            STR[*]
                                            UnaryOperation[
                                                AtomExpr[
                                                    Atom[
                                                        Identifier[
                                                            STR[g]
                                                        ]
                                                    ]
                                                    Trailer[
                                                        Call[
                                                            STR[(]
                                                            expressionList[
                                                                expression[
                                                                    BinaryOperation[
                                                                        UnaryOperation[
                                                                            AtomExpr[
                                                                                Atom[
                                                                                    STR[10]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            STR[)]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                I[
                                    STR[
]
                                ]
                            ]
                            STR[}]
                        ]
                    ]
                ]
            ]
        ]
        STR[;]
    ]
    I[
        STR[
]
    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            Identifier[
                                STR[f2]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            LambdaDef[
                block[
                    STR[{]
                    variableDeclarationEntryList[
                        I[
                            STR[
]
                        ]
                        variableDeclarationEntry[
                            Identifier[
                                STR[i]
                            ]
                            STR[:]
                            Type[
                                Identifier[
                                    STR[auto]
                                ]
                            ]
                        ]
                    ]
                    STR[->]
                    statements[
                        statement[
                            expression[
                                BinaryOperation[
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                Identifier[
                                                    STR[i]
                                                ]
                                            ]
                                        ]
                                    ]
                                    STR[*]
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                STR[20]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                        I[
                            STR[
]
                        ]
                    ]
                    STR[}]
                ]
            ]
        ]
    ]
    I[
        STR[
]
    ]
    statement[
        declaration[
            structDeclaration[
                STR[struct]
                Identifier[
                    STR[Some]
                ]
                STR[{]
                I[
                    STR[
]
                ]
                variableDeclarationEntry[
                    Identifier[
                        STR[a]
                    ]
                    STR[:]
                    Type[
                        Identifier[
                            STR[i32]
                        ]
                    ]
                ]
                I[
                    STR[
]
                ]
                variableDeclarationEntry[
                    Identifier[
                        STR[f]
                    ]
                    STR[:]
                    Type[
                        STR[[]
                        TypeList[
                            Type[
                                Identifier[
                                    STR[i32]
                                ]
                            ]
                        ]
                        STR[=>]
                        Type[
                            Identifier[
                                STR[i32]
                            ]
                        ]
                        STR[]]
                    ]
                ]
                I[
                    STR[
]
                ]
                variableDeclarationEntry[
                    Identifier[
                        STR[g]
                    ]
                    STR[:]
                    Type[
                        STR[[]
                        TypeList[
                            Type[
                                STR[[]
                                TypeList[
                                    Type[
                                        Identifier[
                                            STR[i32]
                                        ]
                                    ]
                                ]
                                STR[=>]
                                Type[
                                    Identifier[
                                        STR[i32]
                                    ]
                                ]
                                STR[]]
                            ]
                        ]
                        STR[=>]
                        Type[
                            STR[[]
                            TypeList[
                                Type[
                                    Identifier[
                                        STR[i32]
                                    ]
                                ]
                            ]
                            STR[=>]
                            Type[
                                Identifier[
                                    STR[i32]
                                ]
                            ]
                            STR[]]
                        ]
                        STR[]]
                    ]
                ]
                I[
                    STR[
]
                ]
                STR[}]
            ]
        ]
    ]
    I[
        STR[
]
    ]
    statement[
        expression[
            LambdaDef[
                genericParameters[
                    STR[<]
                    Identifier[
                        STR[T]
                    ]
                    STR[>]
                ]
                LambdaDef[
                    STR[(]
                    variableDeclarationEntryList[
                        variableDeclarationEntry[
                            Identifier[
                                STR[x]
                            ]
                            STR[:]
                            Type[
                                Identifier[
                                    STR[i32]
                                ]
                            ]
                        ]
                    ]
                    STR[)]
                    STR[=>]
                    Type[
                        Identifier[
                            STR[i32]
                        ]
                    ]
                    STR[->]
                    body[
                        statement[
                            expression[
                                BinaryOperation[
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                Identifier[
                                                    STR[x]
                                                ]
                                            ]
                                        ]
                                    ]
                                    STR[+]
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                STR[1]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    I[
        STR[
]
    ]
]