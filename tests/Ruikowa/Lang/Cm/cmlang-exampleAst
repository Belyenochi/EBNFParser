statements[
    I[
        

    ]
    statement[
        declaration[
            variableDeclaration[
                var
                variableDeclarationEntry[
                    Identifier[
                        f
                    ]
                    :
                    Type[
                        Identifier[
                            auto
                        ]
                    ]
                ]
                =
                expression[
                    LambdaDef[
                        (
                        variableDeclarationEntryList[
                            variableDeclarationEntry[
                                Identifier[
                                    i
                                ]
                                :
                                Type[
                                    Identifier[
                                        i32
                                    ]
                                ]
                            ]
                            ,
                            variableDeclarationEntry[
                                Identifier[
                                    inner
                                ]
                                :
                                Type[
                                    [
                                    TypeList[
                                        Type[
                                            Identifier[
                                                i32
                                            ]
                                        ]
                                    ]
                                    =>
                                    Type[
                                        Identifier[
                                            i32
                                        ]
                                    ]
                                    ]
                                ]
                            ]
                        ]
                        )
                        ->
                        body[
                            block[
                                {
                                statements[
                                    statement[
                                        expression[
                                            BinaryOperation[
                                                UnaryOperation[
                                                    AtomExpr[
                                                        Atom[
                                                            Identifier[
                                                                inner
                                                            ]
                                                        ]
                                                        Trailer[
                                                            Call[
                                                                (
                                                                expressionList[
                                                                    expression[
                                                                        BinaryOperation[
                                                                            UnaryOperation[
                                                                                AtomExpr[
                                                                                    Atom[
                                                                                        Identifier[
                                                                                            i
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                )
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                }
                            ]
                        ]
                    ]
                ]
            ]
        ]
        ;
    ]
    I[
        

    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            Identifier[
                                f
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            2
                        ]
                    ]
                ]
                +
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            1
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            LambdaDef[
                variableDeclarationEntry[
                    Identifier[
                        i
                    ]
                    :
                    Type[
                        Identifier[
                            auto
                        ]
                    ]
                ]
                ->
                body[
                    statement[
                        expression[
                            BinaryOperation[
                                UnaryOperation[
                                    AtomExpr[
                                        Atom[
                                            1
                                        ]
                                    ]
                                ]
                                +
                                UnaryOperation[
                                    AtomExpr[
                                        Atom[
                                            2
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    I[
        

    ]
    statement[
        declaration[
            variableDeclaration[
                let
                variableDeclarationEntry[
                    Identifier[
                        f2
                    ]
                    :
                    Type[
                        [
                        TypeList[
                            Type[
                                [
                                TypeList[
                                    Type[
                                        Identifier[
                                            i32
                                        ]
                                    ]
                                ]
                                =>
                                Type[
                                    Identifier[
                                        i32
                                    ]
                                ]
                                ]
                            ]
                        ]
                        =>
                        Type[
                            Identifier[
                                i32
                            ]
                        ]
                        ]
                    ]
                ]
                =
                expression[
                    LambdaDef[
                        block[
                            {
                            variableDeclarationEntryList[
                                I[
                                    

                                ]
                                variableDeclarationEntry[
                                    Identifier[
                                        g
                                    ]
                                    :
                                    Type[
                                        Identifier[
                                            auto
                                        ]
                                    ]
                                ]
                            ]
                            ->
                            statements[
                                I[
                                    

                                ]
                                statement[
                                    expression[
                                        BinaryOperation[
                                            UnaryOperation[
                                                AtomExpr[
                                                    Atom[
                                                        2
                                                    ]
                                                ]
                                            ]
                                            *
                                            UnaryOperation[
                                                AtomExpr[
                                                    Atom[
                                                        Identifier[
                                                            g
                                                        ]
                                                    ]
                                                    Trailer[
                                                        Call[
                                                            (
                                                            expressionList[
                                                                expression[
                                                                    BinaryOperation[
                                                                        UnaryOperation[
                                                                            AtomExpr[
                                                                                Atom[
                                                                                    10
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            )
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                I[
                                    

                                ]
                            ]
                            }
                        ]
                    ]
                ]
            ]
        ]
        ;
    ]
    I[
        

    ]
    statement[
        expression[
            BinaryOperation[
                UnaryOperation[
                    AtomExpr[
                        Atom[
                            Identifier[
                                f2
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    statement[
        expression[
            LambdaDef[
                block[
                    {
                    variableDeclarationEntryList[
                        I[
                            

                        ]
                        variableDeclarationEntry[
                            Identifier[
                                i
                            ]
                            :
                            Type[
                                Identifier[
                                    auto
                                ]
                            ]
                        ]
                    ]
                    ->
                    statements[
                        statement[
                            expression[
                                BinaryOperation[
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                Identifier[
                                                    i
                                                ]
                                            ]
                                        ]
                                    ]
                                    *
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                20
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                        I[
                            

                        ]
                    ]
                    }
                ]
            ]
        ]
    ]
    I[
        

    ]
    statement[
        declaration[
            structDeclaration[
                struct
                Identifier[
                    Some
                ]
                {
                I[
                    

                ]
                variableDeclarationEntry[
                    Identifier[
                        a
                    ]
                    :
                    Type[
                        Identifier[
                            i32
                        ]
                    ]
                ]
                I[
                    

                ]
                variableDeclarationEntry[
                    Identifier[
                        f
                    ]
                    :
                    Type[
                        [
                        TypeList[
                            Type[
                                Identifier[
                                    i32
                                ]
                            ]
                        ]
                        =>
                        Type[
                            Identifier[
                                i32
                            ]
                        ]
                        ]
                    ]
                ]
                I[
                    

                ]
                variableDeclarationEntry[
                    Identifier[
                        g
                    ]
                    :
                    Type[
                        [
                        TypeList[
                            Type[
                                [
                                TypeList[
                                    Type[
                                        Identifier[
                                            i32
                                        ]
                                    ]
                                ]
                                =>
                                Type[
                                    Identifier[
                                        i32
                                    ]
                                ]
                                ]
                            ]
                        ]
                        =>
                        Type[
                            [
                            TypeList[
                                Type[
                                    Identifier[
                                        i32
                                    ]
                                ]
                            ]
                            =>
                            Type[
                                Identifier[
                                    i32
                                ]
                            ]
                            ]
                        ]
                        ]
                    ]
                ]
                I[
                    

                ]
                }
            ]
        ]
    ]
    I[
        

    ]
    statement[
        expression[
            LambdaDef[
                genericParameters[
                    <
                    Identifier[
                        T
                    ]
                    >
                ]
                LambdaDef[
                    (
                    variableDeclarationEntryList[
                        variableDeclarationEntry[
                            Identifier[
                                x
                            ]
                            :
                            Type[
                                Identifier[
                                    i32
                                ]
                            ]
                        ]
                    ]
                    )
                    =>
                    Type[
                        Identifier[
                            i32
                        ]
                    ]
                    ->
                    body[
                        statement[
                            expression[
                                BinaryOperation[
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                Identifier[
                                                    x
                                                ]
                                            ]
                                        ]
                                    ]
                                    +
                                    UnaryOperation[
                                        AtomExpr[
                                            Atom[
                                                1
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
    I[
        

    ]
]